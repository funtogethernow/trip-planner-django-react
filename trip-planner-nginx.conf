server {
    listen 80;
    server_name 54.234.104.123;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name 54.234.104.123;
    
    ssl_certificate /etc/ssl/certs/trip-planner.crt;
    ssl_certificate_key /etc/ssl/certs/trip-planner.key;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Serve service worker from root to maintain same origin
    location = /service-worker.js {
        alias /home/ec2-user/Playground/staticfiles/service-worker.js;
        add_header Content-Type "application/javascript";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Serve manifest.json from root for PWA
    location = /manifest.json {
        alias /home/ec2-user/Playground/staticfiles/manifest.json;
        add_header Content-Type "application/json";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Serve favicon from root
    location = /favicon.ico {
        alias /home/ec2-user/Playground/staticfiles/favicon.ico;
        add_header Content-Type "image/x-icon";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Serve app icons from root for PWA
    location = /logo192.png {
        alias /home/ec2-user/Playground/staticfiles/logo192.png;
        add_header Content-Type "image/png";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    location = /logo512.png {
        alias /home/ec2-user/Playground/staticfiles/logo512.png;
        add_header Content-Type "image/png";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Serve static files directly with proper MIME types
    location /static/ {
        alias /home/ec2-user/Playground/staticfiles/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Set proper MIME types
        location ~* \.js$ {
            add_header Content-Type "application/javascript";
        }
        location ~* \.css$ {
            add_header Content-Type "text/css";
        }
        location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
            add_header Content-Type "image/$1";
        }
    }
    
    # Proxy API requests to Django
    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
    }
    
    # Proxy all other requests to Django (for React routing)
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Handle WebSocket connections if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
} 